name: "Deploy consumer notification"

on:
  push:
      branches:
        - master
#    tags:
#      - 'dev-v*'

jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
      - name: Check out the repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: yarn install

      - name: Log in to docker hub
        uses: docker/login-action@v2
        with:
          username: ${{secrets.DOCKER_USERNAME}}
          password: ${{secrets.DOCKER_PASSWORD}}

      - name: Get version from git tags
        id: version
        run: |
          VERSION="v1.0.${{ github.run_number }}"
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Build Docker
        run: |
          docker build --platform linux/amd64 -t joaojunior1205/notification-consumer:$VERSION .
          docker tag joaojunior1205/notification-consumer:$VERSION joaojunior1205/notification-consumer:latest

      - name: Push Docker image with tag and latest
        run: |
          docker push joaojunior1205/notification-consumer:$VERSION
          docker push joaojunior1205/notification-consumer:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: ${{ success() }}

    steps:
      - name: "Submit to instance"
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.ORACLE_HOST }}
          username: ${{ secrets.ORACLE_USERNAME }}
          key: ${{ secrets.ORACLE_SSH_PRIVATE_KEY }}
          port: 22
          script: |
            CONSUMER_RUNNING=$(docker ps -q -f name=notification-consumer)
            CONSUMER_IMAGE_EXISTS=$(docker images -q joaojunior1205/notification-consumer:latest)
  
            if [ -n "$CONSUMER_RUNNING" ]; then
              echo "Parando consumer..."
              docker rm -f notification-consumer
            else
              echo "Contêiner consumer não está em execução."
            fi
  
            if [ -n "$CONSUMER_IMAGE_EXISTS" ]; then
              echo "Removendo a imagem do consumer..."
              docker rmi joaojunior1205/notification-consumer:latest
            else
              echo "Imagem do consumer não encontrada."
            fi
  
            echo "Baixando a imagem mais recente do consumer..."
            docker pull joaojunior1205/notification-consumer:latest
            docker run -p 9051:9051 \
                          --name notification-consumer \
                          --network bufunfa \
                          -e RABBITMQ_USER='${{ secrets.RABBITMQ_USER }}' \
                          -e RABBITMQ_PASSWORD='${{ secrets.RABBITMQ_PASSWORD }}' \
                          -e RABBITMQ_VHOST='${{ secrets.RABBITMQ_VHOST }}' \
                          -e RABBITMQ_HOST='${{ secrets.RABBITMQ_HOST }}' \
                          -e RABBITMQ_PORT='${{ secrets.RABBITMQ_PORT }}' \
                          -e RABBITMQ_EXCHANGE='${{ secrets.RABBITMQ_EXCHANGE }}' \
                          -e RABBITMQ_PREFETCH='${{ secrets.RABBITMQ_PREFETCH }}' \
                          -e RABBITMQ_QUEUE='${{ secrets.RABBITMQ_QUEUE }}' \
                          -e NOTIFICATION_COLLECTION_NAME='${{ secrets.NOTIFICATION_COLLECTION_NAME }}' \
                          -d joaojunior1205/notification-consumer:latest